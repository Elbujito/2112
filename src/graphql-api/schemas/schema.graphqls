schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  # Retrieve the position of a satellite by ID
  satellitePosition(id: ID!): SatellitePosition

  # Retrieve the TLE data of a satellite by ID
  satelliteTle(id: ID!): SatelliteTle

  # Retrieve positions of a satellite within a time range
  satellitePositionsInRange(id: ID!, startTime: String!, endTime: String!): [SatellitePosition!]!

  # Fetch cached visibilities for satellites in view based on user location and parameters
  cachedSatelliteVisibilities(
    uid: String!
    userLocation: UserLocationInput!
    startTime: String!
    endTime: String!
  ): [SatelliteVisibility!]!
}

type Mutation {
  # Request visibilities for satellites within a specific user location and time range
  requestSatelliteVisibilities(
    uid: String!
    userLocation: UserLocationInput!
    startTime: String!
    endTime: String!
  ): Boolean!
}

type Subscription {
  # Real-time position updates for a specific user
  satellitePositionUpdated(uid: String!, id: ID!): SatellitePosition

  # Real-time updates for satellite visibilities in a user-defined zone for a specific user
  satelliteVisibilityUpdated(
    uid: String!
    userLocation: UserLocationInput!
    startTime: String!
    endTime: String!
  ): [SatelliteVisibility!]!
}

# User-defined location parameters for visibility queries
input UserLocationInput {
  uid: String! # User ID for identifying the request
  latitude: Float!
  longitude: Float!
  radius: Float! # Radius of visibility in kilometers
  horizon: Float! # Horizon angle in degrees
}

# Satellite position and visibility information
type SatellitePosition {
  id: ID!
  name: String!
  latitude: Float!
  longitude: Float!
  altitude: Float!
  timestamp: String! # ISO 8601 format
  uid: String! # User ID associated with the update
}

type SatelliteTle {
  id: ID!
  name: String!
  tleLine1: String!
  tleLine2: String!
  uid: String! # User ID associated with the request
}

# Satellite visibility details
type SatelliteVisibility {
  satelliteId: ID!
  satelliteName: String!
  aos: String! # Acquisition of Signal (ISO 8601 format)
  los: String! # Loss of Signal (ISO 8601 format)
  userLocation: UserLocation! # The location and parameters of the user
  uid: String! # User ID associated with the visibility data
}

# User location and viewing parameters
type UserLocation {
  uid: String! # User ID for identifying the location context
  latitude: Float!
  longitude: Float!
  radius: Float! # Radius of visibility in kilometers
  horizon: Float! # Horizon angle in degrees
}
