package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"
	"graphql-api/graph/model"
)

// SatellitePosition is the resolver for the satellitePosition field.
func (r *queryResolver) SatellitePosition(ctx context.Context, id string) (*model.SatellitePosition, error) {
	panic(fmt.Errorf("not implemented: SatellitePosition - satellitePosition"))
}

// SatelliteTle is the resolver for the satelliteTle field.
func (r *queryResolver) SatelliteTle(ctx context.Context, id string) (*model.SatelliteTle, error) {
	panic(fmt.Errorf("not implemented: SatelliteTle - satelliteTle"))
}

// MessageHistory is the resolver for the messageHistory field.
func (r *queryResolver) MessageHistory(ctx context.Context) ([]string, error) {
	panic(fmt.Errorf("not implemented: MessageHistory - messageHistory"))
}

// MessageReceived is the resolver for the messageReceived field.
func (r *subscriptionResolver) MessageReceived(ctx context.Context) (<-chan string, error) {
	panic(fmt.Errorf("not implemented: MessageReceived - messageReceived"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Subscription returns SubscriptionResolver implementation.
func (r *Resolver) Subscription() SubscriptionResolver { return &subscriptionResolver{r} }

type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }
